<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            if (!Schema::hasColumn('users', 'id')) {
                $table->id();
            }
            if (!Schema::hasColumn('users', 'name')) {
                $table->string('name');
            }
            if (!Schema::hasColumn('users', 'email')) {
                $table->string('email')->unique();
            }
            if (!Schema::hasColumn('users', 'phone')) {
                $table->string('phone')->nullable();
            }
            if (!Schema::hasColumn('users', 'email_verified_at')) {
                $table->timestamp('email_verified_at')->nullable();
            }
            if (!Schema::hasColumn('users', 'password')) {
                $table->string('password');
            }
            if (!Schema::hasColumn('users', 'role')) {
                $table->enum('role', ['admin','manager','developer'])->default('admin');
            }
            if (!Schema::hasColumn('users', 'is_active')) {
                $table->tinyInteger('is_active')->default(1);
            }
            if (!Schema::hasColumn('users', 'colour_pallate')) {
                $table->string('colour_pallate',10);
            }
            if (!Schema::hasColumn('users', 'image')) {
                $table->string('image')->nullble();
            }
            $table->rememberToken();
            $table->timestamps();
        });

        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });

        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};
=====================================================================
user.blade.php
<div>
    <!DOCTYPE html>
    <html>
    <head>
        <title>Laravel 11 Ajax CRUD Tutorial Example - ItSolutionStuff.com</title>
        <meta name="csrf-token" content="{{ csrf_token() }}">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.0.1/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdn.datatables.net/1.11.4/css/dataTables.bootstrap5.min.css" rel="stylesheet">
        <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
        <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/1.11.4/js/dataTables.bootstrap5.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" ></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    </head>
    <body>

    <div class="container">
        <div class="card mt-5">
            <h2 class="card-header"><i class="fa-regular fa-credit-card"></i> Laravel 11 Ajax CRUD Example - ItSolutionStuff.com</h2>
            <div class="card-body">
                <div class="d-grid gap-2 d-md-flex justify-content-md-end mb-3">
                    <a class="btn btn-success btn-sm" href="javascript:void(0)" id="createNewUser"> <i class="fa fa-plus"></i> Create New User</a>
                </div>

                <table class="table table-bordered data-table">
                    <thead>
                        <tr>
                            <th width="60px">No</th>
                            <th>Name</th>
                            <th>Details</th>
                            <th width="280px">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>

    </div>

    <div class="modal fade" id="ajaxModel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modelHeading"></h4>
                </div>
                <div class="modal-body">
                    <form id="userForm" name="userForm" class="form-horizontal">
                    <input type="hidden" name="user_id" id="user_id">
                    @csrf

                        <div class="alert alert-danger print-error-msg" style="display:none">
                            <ul></ul>
                        </div>

                        <div class="form-group">
                            <label for="name" class="col-sm-2 control-label">Name:</label>
                            <div class="col-sm-12">
                                <input type="text" class="form-control" id="name" name="name" placeholder="Enter Name" value="" maxlength="50">
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-2 control-label">Details:</label>
                            <div class="col-sm-12">
                                <textarea id="detail" name="detail" placeholder="Enter Details" class="form-control"></textarea>
                            </div>
                        </div>

                        <div class="col-sm-offset-2 col-sm-10">
                        <button type="submit" class="btn btn-success mt-2" id="saveBtn" value="create"><i class="fa fa-save"></i> Submit
                        </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="showModel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modelHeading"><i class="fa-regular fa-eye"></i> Show User</h4>
                </div>
                <div class="modal-body">
                    <p><strong>Name:</strong> <span class="show-name"></span></p>
                    <p><strong>Detail:</strong> <span class="show-detail"></span></p>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
    $(function () {

        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });

        var table = $('.data-table').DataTable({
            processing: true,
            serverSide: true,
            ajax: "{{ route('users.index') }}", // Adjust route name
            columns: [
                {data: 'DT_RowIndex', name: 'DT_RowIndex'},
                {data: 'name', name: 'name'},
                {data: 'detail', name: 'detail'},
                {data: 'action', name: 'action', orderable: false, searchable: false},
            ]
        });

        $('#createNewUser').click(function () {
            $('#saveBtn').val("create-user");
            $('#user_id').val('');
            $('#userForm').trigger("reset");
            $('#modelHeading').html("<i class='fa fa-plus'></i> Create New User");
            $('#ajaxModel').modal('show');
        });

        $('body').on('click', '.showUser', function () {
        var user_id = $(this).data('id');
        $.get("{{ route('users.index') }}" +'/' + user_id, function (data) {
            $('#showModel').modal('show');
            $('.show-name').text(data.name);
            $('.show-detail').text(data.detail);
        })
        });

        $('body').on('click', '.editUser', function () {
        var user_id = $(this).data('id');
        $.get("{{ route('users.index') }}" +'/' + user_id +'/edit', function (data) {
            $('#modelHeading').html("<i class='fa-regular fa-pen-to-square'></i> Edit User");
            $('#saveBtn').val("edit-user");
            $('#ajaxModel').modal('show');
            $('#user_id').val(data.id);
            $('#name').val(data.name);
            $('#detail').val(data.detail);
        })
        });

        $('#userForm').submit(function(e) {
            e.preventDefault();

            let formData = new FormData(this);
            $('#saveBtn').html('Sending...');

            $.ajax({
                    type:'POST',
                    url: "{{ route('users.store') }}",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: (response) => {
                        $('#saveBtn').html('Submit');
                        $('#userForm').trigger("reset");
                        $('#ajaxModel').modal('hide');
                        table.draw();
                    },
                    error: function(response){
                        $('#saveBtn').html('Submit');
                        $('#userForm').find(".print-error-msg").find("ul").html('');
                        $('#userForm').find(".print-error-msg").css('display','block');
                        $.each( response.responseJSON.errors, function( key, value ) {
                            $('#userForm').find(".print-error-msg").find("ul").append('<li>'+value+'</li>');
                        });
                    }
            });

        });

        $('body').on('click', '.deleteUser', function () {

            var user_id = $(this).data("id");
            confirm("Are You sure want to delete?");

            $.ajax({
                type: "DELETE",
                url: "{{ route('users.store') }}"+'/'+user_id,
                success: function (data) {
                    table.draw();
                },
                error: function (data) {
                    console.log('Error:', data);
                }
            });
        });

    });
    </script>
    </body>
    </html>

<div>

====================================
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class User extends Authenticatable
{
    use HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'name',
        'email',
        'password',
        'phone',
        'role',
        'is_active',
        'colour_pallate',
        // 'image',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var array<int, string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * Get the attributes that should be cast.
     *
     * @return array<string, string>
     */
    protected function casts(): array
    {
        return [
            'email_verified_at' => 'datetime',
            'password' => 'hashed',
        ];
    }
}



@extends('layouts.app')

@section('content')
<div class="container">
	<div class="row justify-content-center">
		<div class="col-md-10">
			<div class="card">
				<div class="card-header d-md-flex justify-content-between">
					<div>{{ __('Create User') }}</div>
					<div class="justify-content-end">
						<a class="btn btn-info btn-sm" href="{{ route('users.index') }}" >
							<i class="fa fa-plus"></i> {{__('Back')}}
						</a>
					</div>
				</div>
				<div class="card-body">
                    <form method="POST" action="{{ route('users.store')}}">
                        @csrf

                        <div class="form-floating mb-3">
                            <input id="name" type="text" class="form-control @error('name') is-invalid @enderror" name="name" placeholder="Name" value="{{ old('name') }}" required autocomplete="name" autofocus >

                            <label for="name">{{ __('Name') }}</label>

                            @error('name')
                                <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                </span>
                            @enderror
                        </div>

                        <div class="form-floating mb-3">
                            <input id="email" type="text" class="form-control @error('email') is-invalid @enderror" name="email" placeholder="Email" value="{{ old('email') }}" required autocomplete="email" autofocus >

                            <label for="email">{{ __('Email') }}</label>

                            @error('email')
                                <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                </span>
                            @enderror
                        </div>

                        <div class="form-floating mb-3">
                            <input id="phone" type="number" class="form-control @error('phone') is-invalid @enderror" name="phone" placeholder="Phone" value="{{ old('phone') }}" required autocomplete="phone" autofocus >

                            <label for="phone">{{ __('Phone') }}</label>

                            @error('phone')
                                <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                </span>
                            @enderror
                        </div>

                        <div class="form-floating mb-3">
                            <input id="password" type="password" class="form-control @error('password') is-invalid @enderror" name="password" placeholder="Password" required autocomplete="new-password" autofocus >

                            <label for="password">{{ __('Password') }}</label>

                            @error('password')
                                <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                </span>
                            @enderror
                        </div>

                        <div class="form-floating mb-3">
                            <select class="form-select @error('role') is-invalid @enderror" name="role" aria-label="Default select example">
                                <option selected>{{__('Select Role')}}</option>
                                <option value="1">{{__('Admin')}}</option>
                                <option value="2">{{__('Manager')}}</option>
                                <option value="3">{{__('Developer')}}</option>
                            </select>
                            @error('role')
                                <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                </span>
                            @enderror
                        </div>

                        <div class="form-floating mb-3">
                            <div>
                                <label for="is_active" class="me-3">{{__('Is Active :')}}</label>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="is_active" id="is_active1" value="0">
                                    <label class="form-check-label" for="is_active">{{__('In-Active')}}</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="is_active" id="is_active2" value="1">
                                    <label class="form-check-label" for="is_active">{{__('Active')}}</label>
                                </div>
                            </div>
                        </div>

                        <div class="form-floating mb-3">
                            <input id="colour_pallate" type="text" class="form-control @error('colour_pallate') is-invalid @enderror" name="colour_pallate" placeholder="Colour Pallate" value="{{ old('colour_pallate') }}" required autocomplete="colour_pallate" autofocus >

                            <label for="colour_pallate">{{ __('Colour Pallate') }}</label>

                            @error('colour_pallate')
                                <span class="invalid-feedback" role="alert">
                                    <strong>{{ $message }}</strong>
                                </span>
                            @enderror
                        </div>

                        <button type="submit" class="btn btn-info"> {{ __('Save') }}</button>
                    </form>

				</div>
			</div>
		</div>
	</div>
</div>


@endsection

direcly inserted data from controller to another table
insert data/store- attach
update data - sync
delete - detach


<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('milestones', function (Blueprint $table) {
            if (!Schema::hasColumn('milestones', 'id')) {
                $table->id();
            }
            if (!Schema::hasColumn('milestones', 'name')) {
                $table->string('name')->requied();
            }
            if (!Schema::hasColumn('milestones', 'due_date')) {
                $table->date('due_date')->nullable();
            }
            if (!Schema::hasColumn('milestones', 'project_id')) {
                $table->unsignedBigInteger('project_id');
                $table->foreign('project_id')->references('id')->on('projects')->onUpdate('cascade')
                ->onDelete('cascade');
            }
            if (!Schema::hasColumn('milestones', 'statuses_id')) {
                $table->unsignedBigInteger('statuses_id');
                $table->foreign('statuses_id')->references('id')->on('milestone_statuses')->onUpdate('cascade')
                ->onDelete('cascade');
            }
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::table('milestones', function($table){
            if (!Schema::hasColumn('milestones', 'id')) {
                $table->dropColumn('id');
            }
            if (!Schema::hasColumn('milestones', 'name')) {
                $table->dropColumn('name');
            }
            if (!Schema::hasColumn('milestones', 'due_date')) {
                $table->dropColumn('due_date');
            }
            if (!Schema::hasColumn('milestones', 'project_id')) {
                $table->dropForeign(['project_id']);
                $table->dropColumn('project_id');
            }
            if (!Schema::hasColumn('milestones', 'statuses_id')) {
                $table->dropForeign(['statuses_id']);
                $table->dropColumn('statuses_id');
            }
            $table->dropTimestamps();
        });
    }
};


Laravel11 create milestone curd under another show.blade.php page of project curd

milestones show page-
<div class="container">
	<div class="row justify-content-center">
		<div class="col-md-10">
			<div class="card">
                @if ($milestone)
				<div class="card-header d-md-flex justify-content-between">
					<div>{{ __('Milestone Details') }}</div>
					<div class="justify-content-end">
						<a class="btn btn-info btn-sm" href="{{ route('projects.milestones.index', ['project' => $projects->id])}}">
							<i class="fa fa-plus"></i> {{__('Back')}}
						</a>
					</div>
				</div>
				<div class="card-body">
					<table class="table table-bordered">
                        <tbody>
                            <tr>
                                <td>{{__('Milestone Name')}}</td>
                                <td> {{ucfirst($milestone->name)}} </td>
                            </tr>
                            <tr>
                                <td>{{__('Due Date')}}</td>
                                <td> {{$milestone->due_date}} </td>
                            </tr>
                            <tr>
                                <td>{{__('Project Id')}}</td>
                                <td>{{$milestone->project_id}}</td>
                            </tr>
                            <tr>
                                <td>{{__('Status Id')}}</td>
                                <td>
                                    @if ($milestone->statuses_id == 1)
                                        {{__('Active')}}
                                    @else
                                        {{__('Completed')}}
                                    @endif
                                </td>
                            </tr>

                        </tbody>
                    </table>
				</div>
                @else
                <div class="ms-2">
                    {{__('Milestone is not present with this Id')}}
                </div>
                @endif
			</div>
		</div>
	</div>
</div>


<a href="{{ route('projects.milestones.tasks.create', ['project' => $projectId, 'milestone' => $milestoneId]) }}">
    <i class="bi bi-plus-circle"></i>
</a>

=====================================================
<div>
    Step 2: Create a Blade View with Sortable Elements
Assume you have a Blade view where you want to implement sortable functionality. For example, resources/views/sortable.blade.php:

html
Copy code
@extends('layouts.app')

@section('content')
    <div class="container">
        <h2>Sortable List</h2>
        <ul id="sortable-list">
            @foreach ($items as $item)
                <li class="ui-state-default">{{ $item }}</li>
            @endforeach
        </ul>
    </div>
@endsection

@push('scripts')
    <script>
        $(document).ready(function() {
            $('#sortable-list').sortable({
                placeholder: 'ui-state-highlight',
                update: function(event, ui) {
                    // AJAX call to update the backend with new order
                    var data = $(this).sortable('serialize');
                    // Example AJAX POST request to update the order
                    $.ajax({
                        url: '{{ route('sortable.update') }}',
                        type: 'POST',
                        data: data,
                        success: function(response) {
                            console.log('Order updated successfully.');
                        },
                        error: function(xhr, status, error) {
                            console.error('Error updating order:', error);
                        }
                    });
                }
            });
            $('#sortable-list').disableSelection();
        });
    </script>
@endpush
Step 3: Set Up Route and Controller (Optional)
Define a route in routes/web.php to handle the AJAX request (assuming you want to save the order):

php
Copy code
Route::post('/sortable/update', [SortableController::class, 'update'])->name('sortable.update');
Create a controller to handle the update action (SortableController.php):

php
Copy code
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class SortableController extends Controller
{
    public function update(Request $request)
    {
        // Handle the update logic here
        // Example: update order in database based on request data
        return response()->json(['message' => 'Order updated successfully']);
    }
}
Step 4: Include jQuery and jQuery UI in Your Layout
Ensure that your main layout (e.g., resources/views/layouts/app.blade.php) includes jQuery and jQuery UI:

html
Copy code
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Include other head elements -->

    <!-- Include jQuery and jQuery UI -->
    <script src="{{ asset('js/jquery.min.js') }}"></script>
    <script src="{{ asset('js/jquery-ui.min.js') }}"></script>
    <link rel="stylesheet" href="{{ asset('css/jquery-ui.min.css') }}">

    <!-- Include CSRF token for AJAX requests -->
    <meta name="csrf-token" content="{{ csrf_token() }}">
</head>
<body>
    <!-- Include other body content -->

    @yield('content')

    <!-- Include scripts -->
    @stack('scripts')
</body>
</html>
Step 5: Run Your Application
</div>
==========================================================


name -> Required
description NULL (Textarea)
milistone_id -> Required (milestones table)
status_id -> Required (task_statuses table)
assign_id -> NULL  (users table)


timestamp with soft delete



1 | Task 1 | gdgdgdfgdgdfg |  18 | 1 | 5 |
2 | Task 2 | gdgdgdfgdgdfg |  18 | 5 | 5 |
3 | Task 3 | gdgdgdfgdgdfg |  18 | 2 | 5 |


1 | To do |
2 | In Progress |
